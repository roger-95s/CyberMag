1.Scraper Modificaions
# scraper.py: multiple websites scrapers
# Build a list of Dictionary that will contain possible common HTML tags, classes, ids on multiples websites.
# Build an AI tool: that could search the dict_List_HTML_Tag[{}], by comparing this list with the website HTML tags, class, and id. 

#   



# URL_SOURCE = ["https://example.com/"] # Make this a list that can contain multiples URLs



# Simple code, but works
WEB_URL = "https://www.darkreading.com/"  
        

def scraper() -> dict:
        try:
                # Sent a Get request 
                response = requests.get(WEB_URL)
                response.raise_for_status() # Raise HTTPError for bad responses
                # Parse the HTML content 
                soup = BeautifulSoup(response.text, 'html.parser')
                
                # Extract data 
                url_
                story_links = [link['href'] for link in url_item]
                if not story_links:
                        print("‚ùå No story-link found")  
                
                titles = soup.find_all('h2', class_='home-title')
                story_title = [title.text.strip() for title in titles]
                if not story_title:
                        print("‚ùå No story-title found")   

        except requests.exceptions.RequestException as e:
                print(f"‚ùå Unexpected Request error while get(Weburl): {e}")
        except Exception as e:
                print(f"‚ùå Error: occurred: {e}")
                return None
        
        # print(f'üòÅ {soup.prettify()}')

        return {
                'url': story_links,
                'title': story_title,
        }



       