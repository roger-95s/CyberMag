fix/ReportCard.jsx & Hero.jsx & Header.jsx

A worker process has failed to exit gracefully and has been force exited. This is likely caused by tests leaking due to improper teardown. Try running with --detectOpenHandles to find leaks. Active timers can also cause this, ensure that .unref() was called on them.
Test Suites: 0 of 1 total
Tests:       0 total
Snapshots:   0 total
Time:        0.77 s, estimated 2 s
Test run was interrupted.


--detectOpenHandles


.unref()


After Running:
npm run lint

ReportCard.jsx
8:3  warning  'ShieldAlert' is defined but never used  no-unused-vars
import {
  ShieldCheck,
  Lock,
  Globe,
  BrainCircuit,
  Bug,
  FileText,
} from "lucide-react";



Hero.jsx
5:9  warning  The 'lines' array makes the dependencies of useEffect Hook (at line 47) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'lines' in its own useMemo() Hook  react-hooks/exhaustive-deps

Problem:

const Hero = () => {
  const lines = [
    "fetching cyber-intel...",
    "✔️ AI Threats detected",
    "✔️ Ransomware patterns updated",
    "✔️ Network firewalls active",
    "> Ready for new reports",
  ];

Fixed Solution:

const Hero = () => {
  const lines = React.useMemo(
    () => [
      "fetching cyber-intel...",
      "✔️ AI Threats detected",
      "✔️ Ransomware patterns updated",
      "✔️ Network firewalls active",
      "> Ready for new reports",
    ],
    []
  );



Header.jsx
Warnings:
50:11  warning  The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md  jsx-a11y/anchor-is-valid
   53:11  warning  The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md  jsx-a11y/anchor-is-valid
   56:11  warning  The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md  jsx-a11y/anchor-is-valid
   59:11  warning  The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md  jsx-a11y/anchor-is-valid
   96:11  warning  The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md  jsx-a11y/anchor-is-valid
   99:11  warning  The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md  jsx-a11y/anchor-is-valid
  102:11  warning  The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md  jsx-a11y/anchor-is-valid
  105:11  warning  The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md  jsx-a11y/anchor-is-valid



Problem:

 {/* Desktop Navigation */}
        <nav className="hidden md:flex gap-6 text-sm font-medium">
          <a href="#" className="text-gray-300 hover:text-cyan-400 transition-colors">
            NEWS
          </a>
          <a href="#" className="text-gray-300 hover:text-cyan-400 transition-colors">
            REPORTS
          </a>
          <a href="#" className="text-gray-300 hover:text-cyan-400 transition-colors">
            ANALYSIS
          </a>
          <a href="#" className="text-gray-300 hover:text-cyan-400 transition-colors">
            ABOUT
          </a>
        </nav>


{/* Mobile Navigation Dropdown */}
      <div
        className={`md:hidden px-4 pb-4 transition-all duration-300 ease-in-out ${
          menuOpen ? "max-h-60 opacity-100" : "max-h-0 opacity-0 overflow-hidden"
        }`}
      >
        <nav className="flex flex-col gap-3 text-sm font-medium text-gray-300">
          <a href="#" className="hover:text-cyan-400 transition-colors">
            NEWS
          </a>
          <a href="#" className="hover:text-cyan-400 transition-colors">
            REPORTS
          </a>
          <a href="#" className="hover:text-cyan-400 transition-colors">
            ANALYSIS
          </a>
          <a href="#" className="hover:text-cyan-400 transition-colors">
            ABOUT
          </a>
        </nav>
      </div>


Fixed Solution:


 {/* Desktop Navigation */}
        <nav className="hidden md:flex gap-6 text-sm font-medium">
          <button type="button" className="text-gray-300 hover:text-cyan-400 transition-colors bg-transparent border-none p-0 m-0 cursor-pointer">
            NEWS
          </button>
          <button type="button" className="text-gray-300 hover:text-cyan-400 transition-colors bg-transparent border-none p-0 m-0 cursor-pointer">
            REPORTS
          </button>
          <button type="button" className="text-gray-300 hover:text-cyan-400 transition-colors bg-transparent border-none p-0 m-0 cursor-pointer">
            ANALYSIS
          </button>
          <button type="button" className="text-gray-300 hover:text-cyan-400 transition-colors bg-transparent border-none p-0 m-0 cursor-pointer">
            ABOUT
          </button>
        </nav>


{/* Mobile Navigation Dropdown */}
      <div
        className={`md:hidden px-4 pb-4 transition-all duration-300 ease-in-out ${
          menuOpen ? "max-h-60 opacity-100" : "max-h-0 opacity-0 overflow-hidden"
        }`}
      >
        <nav className="flex flex-col gap-3 text-sm font-medium text-gray-300">
          <button type="button" className="hover:text-cyan-400 transition-colors bg-transparent border-none p-0 m-0 text-left cursor-pointer">
            NEWS
          </button>
          <button type="button" className="hover:text-cyan-400 transition-colors bg-transparent border-none p-0 m-0 text-left cursor-pointer">
            REPORTS
          </button>
          <button type="button" className="hover:text-cyan-400 transition-colors bg-transparent border-none p-0 m-0 text-left cursor-pointer">
            ANALYSIS
          </button>
          <button type="button" className="hover:text-cyan-400 transition-colors bg-transparent border-none p-0 m-0 text-left cursor-pointer">
            ABOUT
          </button>
        </nav>
      </div>

Result after solve warning/error/problems:
npm run lint

> cybermag@0.1.0 lint
> eslint src --ext .js,.jsx,.ts,.tsx



After running:
npm test -- --coverage

FAIL Reason:
src/__tests__/App.test.js
  ✕ renders loading message (47 ms)

  ● renders loading message

    TypeError: window.matchMedia is not a function

       8 |         localStorage.getItem("theme") === "dark" ||
       9 |         (!localStorage.getItem("theme") &&
    > 10 |           window.matchMedia("(prefers-color-scheme: dark)").matches)
         |                  ^
      11 |       );
      12 |     }
      13 |     return false;

      at src/components/Header.jsx:10:18
      at mountStateImpl (node_modules/react-dom/cjs/react-dom-client.development.js:6130:24)
      at mountState (node_modules/react-dom/cjs/react-dom-client.development.js:6151:22)
      at Object.useState (node_modules/react-dom/cjs/react-dom-client.development.js:22951:18)
      at Object.<anonymous>.process.env.NODE_ENV.exports.useState (node_modules/react/cjs/react.development.js:1221:34)
      at Header (src/components/Header.jsx:5:47)
      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/__tests__/App.test.js:5:9)
      at TestScheduler.scheduleTests (node_modules/@jest/core/build/TestScheduler.js:333:13)
      at runJest (node_modules/@jest/core/build/runJest.js:404:19)

-|---------|----------|---------|---------|-------------------
 | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s
-|---------|----------|---------|---------|-------------------
 |   25.92 |    10.25 |   21.05 |   28.57 |
  |      20 |    30.76 |   28.57 |   22.22 | 13-37
  |   28.57 |        0 |   18.18 |      32 | 23-49,85
  |   33.33 |        0 |       0 |   33.33 | 30-37
-|---------|----------|---------|---------|-------------------
Jest: "global" coverage threshold for statements (50%) not met: 25.92%
Jest: "global" coverage threshold for branches (50%) not met: 10.25%
Jest: "global" coverage threshold for lines (50%) not met: 28.57%
Jest: "global" coverage threshold for functions (50%) not met: 21.05%
Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 total
Snapshots:   0 total
Time:        3.67 s
Ran all test suites related to changed files.


Problem:
renders loading message

    TypeError: window.matchMedia is not a function

       8 |         localStorage.getItem("theme") === "dark" ||
       9 |         (!localStorage.getItem("theme") &&
    > 10 |           window.matchMedia("(prefers-color-scheme: dark)").matches)
         |                  ^
      11 |       );
      12 |     }
      13 |     return false;

      at src/components/Header.jsx:10:18


Where problem was:

const Header = () => {
  const [isDarkMode, setIsDarkMode] = useState(() => {
    if (typeof window !== "undefined") {
      return (
        localStorage.getItem("theme") === "dark" ||
        (!localStorage.getItem("theme") &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      );
    }
    return false;
  });



Fixed Solution:
// src/setupTests.js
Object.defineProperty(window, 'matchMedia', { writable: true, value: jest.fn().mockImplementation(query => ({ matches: false, media: query, onchange: null, addListener: jest.fn(), // deprecated removeListener: jest.fn(), // deprecated addEventListener: jest.fn(), removeEventListener: jest.fn(), dispatchEvent: jest.fn(), })), });



// In Header.jsx component
const isDarkMode = () => { if (typeof window !== 'undefined' && window.matchMedia) { return ( localStorage.getItem("theme") === "dark" || (!localStorage.getItem("theme") && window.matchMedia("(prefers-color-scheme: dark)").matches) ); } return false; //

Save fallback for non-browser environments
 };


And change:

const toggleDarkMode = () => {
    setIsDarkMode((prev) => !prev);
  };

For:

const toggleDarkMode = () => {
    isDarkMode((prev) => !prev);
  };


npm install --save-dev jest-matchmedia-mock

Sources and description:
https://github.com/raymondwang/mock-match-media/

https://www.npmjs.com/package/jsdom-testing-mocks


Problem:
Parsing error: 'return' outside of function. (38:0)eslint


Fixed Solution:

Lastly:
For more Advanced testing

Solution:
Run: npm install --save-dev jest-matchmedia-mock

https://www.npmjs.com/package/jest-matchmedia-mock



Last addition:
Only use when you don't write setupTests.js  file

Package.json:

 "setupFilesAfterEnv": [
      "<rootDir>/src/setupTests.js"
    ]
  }
